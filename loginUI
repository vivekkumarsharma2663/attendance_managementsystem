import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;
import java.util.Random;
import java.util.random.*;
import java.sql.*;
public class testingproject extends JFrame implements ActionListener{
    private JTextField tf1,captchafield;
    private JPasswordField tf2;
    private JLabel l1,l2,bgimage,captchalabel;
    private JButton b1,b2,refreshbutton;
    private String captchatext;
    testingproject(){
        setSize(600,800);
        setLocationRelativeTo(null);
        setTitle("LOGIN PAGE");
        setLayout(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        l1=new JLabel("Username: ");
        l2=new JLabel("Password: ");
        tf1=new JTextField();
        tf2=new JPasswordField();
        tf1.setFont(new Font("Arial",Font.BOLD,14));
        tf2.setFont(new Font("Arial",Font.BOLD,14));
        tf2.setEchoChar('*');
        b1=new JButton("Login");
        b2=new JButton("üëÅÔ∏è");
        b2.setBorderPainted(false);
        b2.setContentAreaFilled(false);
        b2.setFocusPainted(false);
        b2.setForeground(Color.WHITE);


        //CAPTCHA AREA
        captchafield = new JTextField();
        captchalabel = new JLabel();
        captchalabel.setFont(new Font("Arial",Font.BOLD,14));
        captchalabel.setForeground(Color.WHITE);
        captchafield.setFont(new Font("Arial",Font.BOLD,14));
        captchalabel.setBounds(150,420,100,30);
        captchafield.setBounds(250,420,200,30);
        refreshbutton=new JButton("‚ü≥");
        refreshbutton.addActionListener(this);
        refreshbutton.setBounds(450,420,50,40);

        refreshbutton.setBorderPainted(false);
        refreshbutton.setContentAreaFilled(false);
        refreshbutton.setFocusPainted(false);
        refreshbutton.setForeground(Color.WHITE);

        ImageIcon backimage=new ImageIcon("C:\\Users\\Vivek Kumar\\Downloads\\luxa.org-opacity-changed-._newbackground.jpg");
        bgimage=new JLabel(backimage){
        public void paint(Graphics g){
            super.paint(g);
            g.drawImage(backimage.getImage(),0,0,getWidth(),getHeight(),this);
        }
        };
        bgimage.setBounds(0,0,600,800);

        l1.setForeground(Color.WHITE);
        l2.setForeground(Color.WHITE);
        l1.setBounds(150, 300, 100, 30);
        l2.setBounds(150, 370, 100, 30);

        l1.setFont(new Font("Arial", Font.BOLD,14));
        l2.setFont(new Font("Arial",Font.BOLD,14));

        b1.setFont(new Font("Arial",Font.BOLD,14));
        b1.setBackground(new Color(59,89,182));
        b1.setForeground(Color.WHITE);

        tf1.setBounds(250, 300, 200, 30);
        tf2.setBounds(250, 370, 200, 30);
        b1.setBounds(250, 480, 100, 40);
        b2.setBounds(450,370,50,40);
        b1.addActionListener(this);
        b2.addActionListener(this);
        add(l1);add(l2);add(tf1);add(tf2);add(b1);add(b2);
        add(captchafield);add(captchalabel);add(refreshbutton);add(bgimage);

        generatecaptcha();
        setVisible(true);
    }
    private void generatecaptcha(){
    String chars="ABCDEFGHJKLMNPQRSTUVWXYZ23456789";
    StringBuilder captcha = new StringBuilder();
    Random rnd=new Random();
    for(int i=0;i<6;i++){
        captcha.append(chars.charAt(rnd.nextInt(chars.length())));
    }
    captchatext=captcha.toString();
    captchalabel.setText(captchatext);
    }
    private void handlelogin(){
    String username=tf1.getText().trim();
    String password=new String(tf2.getPassword()).trim();
    String captchainput=captchafield.getText().trim();

    if(username.isEmpty()|| password.isEmpty()){
    showerrormessage("USERNAME AND PASSWORD CANNOT BE BLANK !!!");
    return;
    }
    if(!validatecaptcha(captchainput)){
        showerrormessage("INVALID CAPTCHA!!!");
        generatecaptcha();
        captchafield.setText("");
        return;
    }
    if(authenticate(username,password)){
        JOptionPane.showMessageDialog(this,"Login success","SUCCESS",JOptionPane.INFORMATION_MESSAGE);
        new mainframe().setVisible(true);
        dispose();
    }else{
        showerrormessage("INVALID USERNAME AND PASSWORD!!!");
        generatecaptcha();
        captchafield.setText("");
    }
    }
    private void showerrormessage(String message){
        JOptionPane.showMessageDialog(this,message,"ERROR",JOptionPane.ERROR_MESSAGE);
    }
    private boolean validatecaptcha(String input){
        return input.equalsIgnoreCase(captchatext);
    }
    private boolean authenticate(String uname,String passw){
        String username="root";
        String password="Vk07@5998";
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/attendance_system",username,password);
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("SELECT username,password FROM users");
            while(rs.next()) {
                String uu = rs.getString(1);
                String pp = rs.getString(2);
                if (uu.equals(uname) && pp.equals(passw)) {
                    return true;
                }
            }
        }catch(Exception ex){
            System.out.println(ex.getMessage());
        }
        return false;
    }
    public void actionPerformed(ActionEvent ae){
        int cnt=0;
    if(ae.getSource()==b1){
    handlelogin();
    }
    else if(ae.getSource()==b2){
        if(tf2.getEchoChar()=='*'){
            tf2.setEchoChar((char) 0);
        }
        else{
            tf2.setEchoChar('*');
        }
    }
    else if(ae.getSource()==refreshbutton){
        generatecaptcha();
        captchafield.setText("");
    }
    }
    public static void main(String s[]){
        new testingproject();
    }
}
